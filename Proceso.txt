Para dar comienzo al primer proyecto lo primero que se realizo fue crear las carpetas necesarias
que iban a ser usadas. En este caso SistemaGestionElectrica.
Se creo la aplicacion u app de nombre sistemaGestion donde se crearon las distintas vistas 
y tambien las urls para el redireccionamiento a los distintos templates.
Para ello antes se realizo la configuracion de settings y la creacion de las distintas carpetas
que iban a ser necesarias para este proyecto, dentro de las cuales estan la carpeta static donde se
encuentra a su vez la carpeta css, images y js, una para los estilos utilziado en la pagina, otra para
las imagenes que se utilizaron y por ultimo el javascript para implementar el menu de navegacion
que se utiliza en la pagina.

Creadas las distintas carpetas se procedio a crear las carpetas en este caso, para los distintos
templates que se utilizaron en esta primera etapa del proyecto, dada las distintas entidades que
se pidieron implementar, entre las cuales estaban:
-clientes,medidor,lectura,contrato,tarifa,usuario,boleta,pago y notifiaciones
Se creo un template tanto para la visualizacion de datos en tabla y formularios de creacion
tomando en cuenta los datos del diagrama de base de datos que se habia realizado.
Se a√±adio un template adicional para el login y tambien para la ubicacion de los medidores

Realizado lo anterior se procedio a realizar el redireccionamiento de las distintas paginas, para
ello se probo manualmente con cada direccion para corroborar que se estaban cargando correctamente
los templates.

Con esto se procedio a avanzar en las distintas vistas del proyecto, definiendo las funciones 
para la lista de cada template (que corresponde a la visualizacion de los datos en tablas)
y la creacion, incorporando datos a su vez para simular las relaciones entre distintas entidades.

-cada dato ingresado en vistas es simulado y no corresponde a un dato real-
Otro punto a destacar en la creacion de las vistas fue la incorporacion del login para que permitiese
cumplir con la funcion de administrar roles, funcion importante que se utiliza para mostrar las distintas
categorias o acceso de cada template que se incorporo al momento de terminar de definir las funciones
a utilizar en las vistas

Con las distintas vistas creadas se realizo la configuracion respecto a los permisos necesarios
en el acceso de distintos templates.
Se configuro para que se limitara y hubiese restriccion en cuanto a lo que un usuario con rol de finanzas
o un rol de electrico podrian ver en la plataforma.

para los templates se comenzo con base.html que es el template "principal" utilizado por todos los demas.
De aqui se incorpora el menu de navegacion, el icono de la pagina, el logo y los permisos correspondientes
en la visualizacion de los distintos modulos. Tambien se hizo integracion de un script a traves de un js
que se carga como archivo estatico desde la carpeta static, este script permite el despliegue del menu
de navegacion con las distintas categorias por modulo.
Creado la base se procedio con el dashboard.html el cual se encarga de mostrar datos esenciales
de manera rapida a los distintos usuarios dependiendo de su rol, tambien se implemento un acceso rapido
desde la misma interfaz/dashboard hacia las distintas tablas, siempre y cuando el usuario tenga el 
rol necesario.

Realizado esto se procedio con los demas templates que se habian creado con anterioridad.
Todos cuentan con una tabla para visualizar los distintos datos que se han guardado desde views
en algunos casos como es el caso de boletas se cargan otros datos aparte de la tabla para mostrar
caso similar para la ubicacion de los medidores, donde se simula la integracion de un sistema de 
visualizacion para los distintos medidores dada la problematica respecto a la ubicacion.

Para el css se utilizo iconografia por parte de Fonts Awesome, libreria de iconos que permite integrar
de una manera mas rapida distintos iconos 
Tambien se integro por medio de archivos estaticos el style.css que maneja todo el css que se tiene
actualmente en la pagina.
Tambien se integro imagenes e iconos que se cargaron en el base.html y el login.html para que pudiesen ser
visualizados, ademas del mapa de ejemplo para la ubicacion del medidor.

Para el alojamiento se intento realizar por vercel pero dada la configuracion distinta que tiene
un proyecto Django debido al backend a como por ejemplo, se ha visto anteriormente en frontend, se hizo uso 
de la plataforma python anywhere donde se realiza la configuracion desde la misma pagina para poder
alojar el proyecto actual.

Considerando ciertas dudas respecto a los datos de las vistas, se procedio a hacer la correcion de distintos datos que se estaban entregando,
esto a consideracion del diagrama de base de datos y las relaciones entre las distintas tablas.
Esto tambien nos permitio darnos cuenta la inexistencia de ciertos datos que seran necesarios incluir en una base de datos, como pueden ser
el numero_boleta, numero_lectura que deben ser incorporados para una buena relacion entre distintas entidades.

Ademas de ello se integro un nuevo template de ejemplo para los detalles de lectura, donde la idea principal es mostrar las distintas
lecturas por medio de un grafico, en este caso se incorporo por medio de una imagen estatica un grafico de ejemplo de la lectura en distintos meses.